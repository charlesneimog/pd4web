#pragma once

#ifndef __EMSCRIPTEN__
#error "This module requires Emscripten."
#endif

// strings
#include <algorithm>
#include <format>
#include <iostream>
#include <sstream>
#include <climits>

// emscripten
#include <emscripten.h>
#include <emscripten/bind.h>
#include <emscripten/val.h>
#include <emscripten/webaudio.h>

// libpd
#include <z_libpd.h>
#include <z_print_util.h>

#include <g_canvas.h>
#include <m_imp.h>
#include <s_stuff.h>

extern "C" {
#include "config.h"
}

static uint8_t WasmAudioWorkletStack[1024 * 1024];
void Pd4WebInitExternals(); // defined in externals.cpp (generated by pd4web compiler)
//

#if PD4WEB_LUA
extern "C" {
#include <lauxlib.h>
#include <lua.h>
#include <lualib.h>
#include <pdlua.h>
extern lua_State *__L();
extern int pd4weblua_draw();
extern void pdlua_setup();
}
#endif

#define ICON_SOUND_OFF                                                                             \
    "data:image/"                                                                                  \
    "svg+xml;base64,"                                                                              \
    "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1NzYgNTEyIj48IS0tIUZv" \
    "bnQgQXdlc29tZSBGcmVlIDYuNi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vu" \
    "c2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlL2ZyZWUgQ29weXJpZ2h0IDIwMjQgRm9udGljb25zLCBJ" \
    "bmMuLS0+"                                                                                     \
    "PHBhdGggZD0iTTMwMS4xIDM0LjhDMzEyLjYgNDAgMzIwIDUxLjQgMzIwIDY0bDAgMzg0YzAgMTIuNi03LjQgMjQtMTgu" \
    "OSAyOS4ycy0yNSAzLjEtMzQuNC01LjNMMTMxLjggMzUyIDY0IDM1MmMtMzUuMyAwLTY0LTI4LjctNjQtNjRsMC02NGMw" \
    "LTM1LjMgMjguNy02NCA2NC02NGw2Ny44IDBMMjY2LjcgNDAuMWM5LjQtOC40IDIyLjktMTAuNCAzNC40LTUuM3pNNDI1" \
    "IDE2N2w1NSA1NSA1NS01NWM5LjQtOS40IDI0LjYtOS40IDMzLjkgMHM5LjQgMjQuNiAwIDMzLjlsLTU1IDU1IDU1IDU1" \
    "YzkuNCA5LjQgOS40IDI0LjYgMCAzMy45cy0yNC42IDkuNC0zMy45IDBsLTU1LTU1LTU1IDU1Yy05LjQgOS40LTI0LjYg" \
    "OS40LTMzLjkgMHMtOS40LTI0LjYgMC0zMy45bDU1LTU1LTU1LTU1Yy05LjQtOS40LTkuNC0yNC42IDAtMzMuOXMyNC42" \
    "LTkuNCAzMy45IDB6Ii8+PC9zdmc+"

#define ICON_SOUND_ON                                                                              \
    "data:image/"                                                                                  \
    "svg+xml;base64,"                                                                              \
    "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA2NDAgNTEyIj48IS0tIUZv" \
    "bnQgQXdlc29tZSBGcmVlIDYuNi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vu" \
    "c2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlL2ZyZWUgQ29weXJpZ2h0IDIwMjQgRm9udGljb25zLCBJ" \
    "bmMuLS0+"                                                                                     \
    "PHBhdGggZmlsbD0iIzAwMDAwMCIgZD0iTTUzMy42IDMyLjVDNTk4LjUgODUuMiA2NDAgMTY1LjggNjQwIDI1NnMtNDEu" \
    "NSAxNzAuNy0xMDYuNCAyMjMuNWMtMTAuMyA4LjQtMjUuNCA2LjgtMzMuOC0zLjVzLTYuOC0yNS40IDMuNS0zMy44QzU1" \
    "Ny41IDM5OC4yIDU5MiAzMzEuMiA1OTIgMjU2cy0zNC41LTE0Mi4yLTg4LjctMTg2LjNjLTEwLjMtOC40LTExLjgtMjMu" \
    "NS0zLjUtMzMuOHMyMy41LTExLjggMzMuOC0zLjV6TTQ3My4xIDEwN2M0My4yIDM1LjIgNzAuOSA4OC45IDcwLjkgMTQ5" \
    "cy0yNy43IDExMy44LTcwLjkgMTQ5Yy0xMC4zIDguNC0yNS40IDYuOC0zMy44LTMuNXMtNi44LTI1LjQgMy41LTMzLjhD" \
    "NDc1LjMgMzQxLjMgNDk2IDMwMS4xIDQ5NiAyNTZzLTIwLjctODUuMy01My4yLTExMS44Yy0xMC4zLTguNC0xMS44LTIz" \
    "LjUtMy41LTMzLjhzMjMuNS0xMS44IDMzLjgtMy41em0tNjAuNSA3NC41QzQzNC4xIDE5OS4xIDQ0OCAyMjUuOSA0NDgg" \
    "MjU2cy0xMy45IDU2LjktMzUuNCA3NC41Yy0xMC4zIDguNC0yNS40IDYuOC0zMy44LTMuNXMtNi44LTI1LjQgMy41LTMz" \
    "LjhDMzkzLjEgMjg0LjQgNDAwIDI3MSA0MDAgMjU2cy02LjktMjguNC0xNy43LTM3LjNjLTEwLjMtOC40LTExLjgtMjMu" \
    "NS0zLjUtMzMuOHMyMy41LTExLjggMzMuOC0zLjV6TTMwMS4xIDM0LjhDMzEyLjYgNDAgMzIwIDUxLjQgMzIwIDY0bDAg" \
    "Mzg0YzAgMTIuNi03LjQgMjQtMTguOSAyOS4ycy0yNSAzLjEtMzQuNC01LjNMMTMxLjggMzUyIDY0IDM1MmMtMzUuMyAw" \
    "LTY0LTI4LjctNjQtNjRsMC02NGMwLTM1LjMgMjguNy02NCA2NC02NGw2Ny44IDBMMjY2LjcgNDAuMWM5LjQtOC40IDIy" \
    "LjktMTAuNCAzNC40LTUuM3oiLz48L3N2Zz4="

// ╭─────────────────────────────────────╮
// │            Gui Interface            │
// ╰─────────────────────────────────────╯
#include <GLES3/gl3.h>
#define NANOVG_GLES3_IMPLEMENTATION
#include <nanovg.h>
#include <nanovg_gl.h> // or nanovg_gl3.h depending on your setup
#include <nanovg_gl_utils.h>

class Pd4Web;
using GuiCommandMap = std::unordered_map<
    std::string,
    std::unordered_map<std::string, std::unordered_map<int, std::vector<GuiCommand *>>>>;

enum Pd4WebSenderType { BANG = 0, FLOAT, SYMBOL, LIST, MESSAGE };
struct Pd4WebUserData {
    Pd4Web *pd4web;
    t_pdinstance *libpd;

    // sound
    bool soundInit;
    bool soundSuspended;
    std::string soundToggleSel;

    // canvasSel
    std::string canvasSel;

    // processing audio;
    std::mutex mtx;
    std::condition_variable cv;
    bool drawing = false;
    bool processing = false;

    // mouse
    bool mousedown;
    bool doit;
    int xpos;
    int ypos;
    int canvas_width;
    int canvas_height;
    float devicePixelRatio;
    t_gobj *obj;
    t_canvas *canvas;
    
    // rendering optimization
    bool first_frame = true;
    
    // webgl context
    NVGcontext *vg = nullptr;
    bool contextReady = false;
};

void loop(void *userData);

// ╭─────────────────────────────────────╮
// │                                     │
// ╰─────────────────────────────────────╯
struct PdLuaObjGuiLayer {
    bool drawing = false;
    bool need_redraw = false;
    int size;
    std::string layer_id;
    std::vector<GuiCommand> gui_commands;

    // object dimensions (for zoom calculation)
    int objx;
    int objy;
    int objw;
    int objh;
};
// layer
using PdLuaObjLayers = std::unordered_map<int, PdLuaObjGuiLayer>;
// objid
using PdLuaObjsGui = std::unordered_map<std::string, PdLuaObjLayers>;
// libpd gui
using PdInstanceGui = std::unordered_map<t_pdinstance*, PdLuaObjsGui>;

// ╭─────────────────────────────────────╮
// │             Main Class              │
// ╰─────────────────────────────────────╯
class Pd4Web {
  public:
    ~Pd4Web() {
        libpd_free_instance(m_NewPdInstance);
        delete m_SoundToggle;
        delete m_MouseListener;
        delete m_MainLoop;
    }

    // Main
    void init();
    void suspendAudio();
    void openPatch(std::string PatchPath, std::string PatchCanvaId, std::string soundToggleId);

    // send Messages
    void sendFloat(std::string r, float f);
    void sendSymbol(std::string r, std::string s);
    void sendBang(std::string r);
    void midiByte(uint8_t byte1, uint8_t byte2, uint8_t byte3);

    EMSCRIPTEN_WEBAUDIO_T m_Context;
    t_pdinstance *m_NewPdInstance;

  private:
    Pd4WebUserData *m_SoundToggle;
    Pd4WebUserData *m_MouseListener;
    Pd4WebUserData *m_MainLoop;

    // bind symbols
    // void bindReceiver(std::string s);
    // void addGuiReceiver(std::string s);
    // void unbindReceiver();

    std::string canvasId;
    bool m_Pd4WebInit = false;
    bool m_PdInit = false;
    bool m_audioSuspended = false;
    std::vector<std::string> m_Receivers;
};

// ╭─────────────────────────────────────╮
// │  Bind C++ functions to JavaScript   │
// ╰─────────────────────────────────────╯
EMSCRIPTEN_BINDINGS(WebPd) {
    emscripten::class_<Pd4Web>("Pd4Web")
        .constructor<>() // Default constructor
        .function("init", &Pd4Web::init)
        .function("openPatch", &Pd4Web::openPatch)
        .function("suspendAudio", &Pd4Web::suspendAudio)

        // senders
        .function("sendBang", &Pd4Web::sendBang)
        .function("sendFloat", &Pd4Web::sendFloat)
        .function("sendSymbol", &Pd4Web::sendSymbol)
        // .function("sendList", &Pd4Web::sendList)
        // .function("sendMessage", &Pd4Web::sendMessage)

        // Midi
        .function("_midiByte", &Pd4Web::midiByte);
}
