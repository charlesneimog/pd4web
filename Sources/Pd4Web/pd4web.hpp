#pragma once

#ifndef __EMSCRIPTEN__
#error "This module requires Emscripten."
#endif

// strings
#include <format>
#include <iostream>

// emscripten
#include <emscripten.h>
#include <emscripten/bind.h>
#include <emscripten/val.h>
#include <emscripten/webaudio.h>

// libpd
#include <z_libpd.h>
#include <z_print_util.h>

#include <g_canvas.h>
#include <m_imp.h>
#include <s_stuff.h>

// IEM Gui
#include <g_all_guis.h>

#include "config.h"

#define PD4WEB_DEBUG true

static uint8_t WasmAudioWorkletStack[1024 * 1024];

void Pd4WebInitExternals(); // defined in externals.cpp (generated by pd4web python package)

#if PD4WEB_LUA
extern "C" {
#include <lauxlib.h>
#include <lua.h>
#include <lualib.h>
#include <pdlua.h>
extern lua_State *__L();
extern int pd4weblua_draw();
extern void pdlua_setup();
}
#endif

#define ICON_SOUND_OFF                                                                             \
    "data:image/"                                                                                  \
    "svg+xml;base64,"                                                                              \
    "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA1NzYgNTEyIj48IS0tIUZv" \
    "bnQgQXdlc29tZSBGcmVlIDYuNi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vu" \
    "c2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlL2ZyZWUgQ29weXJpZ2h0IDIwMjQgRm9udGljb25zLCBJ" \
    "bmMuLS0+"                                                                                     \
    "PHBhdGggZD0iTTMwMS4xIDM0LjhDMzEyLjYgNDAgMzIwIDUxLjQgMzIwIDY0bDAgMzg0YzAgMTIuNi03LjQgMjQtMTgu" \
    "OSAyOS4ycy0yNSAzLjEtMzQuNC01LjNMMTMxLjggMzUyIDY0IDM1MmMtMzUuMyAwLTY0LTI4LjctNjQtNjRsMC02NGMw" \
    "LTM1LjMgMjguNy02NCA2NC02NGw2Ny44IDBMMjY2LjcgNDAuMWM5LjQtOC40IDIyLjktMTAuNCAzNC40LTUuM3pNNDI1" \
    "IDE2N2w1NSA1NSA1NS01NWM5LjQtOS40IDI0LjYtOS40IDMzLjkgMHM5LjQgMjQuNiAwIDMzLjlsLTU1IDU1IDU1IDU1" \
    "YzkuNCA5LjQgOS40IDI0LjYgMCAzMy45cy0yNC42IDkuNC0zMy45IDBsLTU1LTU1LTU1IDU1Yy05LjQgOS40LTI0LjYg" \
    "OS40LTMzLjkgMHMtOS40LTI0LjYgMC0zMy45bDU1LTU1LTU1LTU1Yy05LjQtOS40LTkuNC0yNC42IDAtMzMuOXMyNC42" \
    "LTkuNCAzMy45IDB6Ii8+PC9zdmc+"

#define ICON_SOUND_ON                                                                              \
    "data:image/"                                                                                  \
    "svg+xml;base64,"                                                                              \
    "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCA2NDAgNTEyIj48IS0tIUZv" \
    "bnQgQXdlc29tZSBGcmVlIDYuNi4wIGJ5IEBmb250YXdlc29tZSAtIGh0dHBzOi8vZm9udGF3ZXNvbWUuY29tIExpY2Vu" \
    "c2UgLSBodHRwczovL2ZvbnRhd2Vzb21lLmNvbS9saWNlbnNlL2ZyZWUgQ29weXJpZ2h0IDIwMjQgRm9udGljb25zLCBJ" \
    "bmMuLS0+"                                                                                     \
    "PHBhdGggZmlsbD0iIzAwMDAwMCIgZD0iTTUzMy42IDMyLjVDNTk4LjUgODUuMiA2NDAgMTY1LjggNjQwIDI1NnMtNDEu" \
    "NSAxNzAuNy0xMDYuNCAyMjMuNWMtMTAuMyA4LjQtMjUuNCA2LjgtMzMuOC0zLjVzLTYuOC0yNS40IDMuNS0zMy44QzU1" \
    "Ny41IDM5OC4yIDU5MiAzMzEuMiA1OTIgMjU2cy0zNC41LTE0Mi4yLTg4LjctMTg2LjNjLTEwLjMtOC40LTExLjgtMjMu" \
    "NS0zLjUtMzMuOHMyMy41LTExLjggMzMuOC0zLjV6TTQ3My4xIDEwN2M0My4yIDM1LjIgNzAuOSA4OC45IDcwLjkgMTQ5" \
    "cy0yNy43IDExMy44LTcwLjkgMTQ5Yy0xMC4zIDguNC0yNS40IDYuOC0zMy44LTMuNXMtNi44LTI1LjQgMy41LTMzLjhD" \
    "NDc1LjMgMzQxLjMgNDk2IDMwMS4xIDQ5NiAyNTZzLTIwLjctODUuMy01My4yLTExMS44Yy0xMC4zLTguNC0xMS44LTIz" \
    "LjUtMy41LTMzLjhzMjMuNS0xMS44IDMzLjgtMy41em0tNjAuNSA3NC41QzQzNC4xIDE5OS4xIDQ0OCAyMjUuOSA0NDgg" \
    "MjU2cy0xMy45IDU2LjktMzUuNCA3NC41Yy0xMC4zIDguNC0yNS40IDYuOC0zMy44LTMuNXMtNi44LTI1LjQgMy41LTMz" \
    "LjhDMzkzLjEgMjg0LjQgNDAwIDI3MSA0MDAgMjU2cy02LjktMjguNC0xNy43LTM3LjNjLTEwLjMtOC40LTExLjgtMjMu" \
    "NS0zLjUtMzMuOHMyMy41LTExLjggMzMuOC0zLjV6TTMwMS4xIDM0LjhDMzEyLjYgNDAgMzIwIDUxLjQgMzIwIDY0bDAg" \
    "Mzg0YzAgMTIuNi03LjQgMjQtMTguOSAyOS4ycy0yNSAzLjEtMzQuNC01LjNMMTMxLjggMzUyIDY0IDM1MmMtMzUuMyAw" \
    "LTY0LTI4LjctNjQtNjRsMC02NGMwLTM1LjMgMjguNy02NCA2NC02NGw2Ny44IDBMMjY2LjcgNDAuMWM5LjQtOC40IDIy" \
    "LjktMTAuNCAzNC40LTUuM3oiLz48L3N2Zz4="

// ╭─────────────────────────────────────╮
// │            Gui Interface            │
// ╰─────────────────────────────────────╯

using ListItem = std::variant<float, std::string>;
using ItemList = std::vector<ListItem>;

struct Pd4WebGuiConnector {
    std::string Receiver;
    std::string Sender;
    enum Pd4WebGuiTypeEnum { BANG = 0, FLOAT, SYMBOL, LIST, MESSAGE } Type;
    bool BeingUpdated = false;
    bool Updated;

    float Float;
    std::string Symbol;
    std::string Selector;
    ItemList List;
    t_atom *Atoms;
};

using Pd4WebGuiReceiverList = std::vector<Pd4WebGuiConnector>;
void mainLoop(void *userData);

// ╭─────────────────────────────────────╮
// │             Main Class              │
// ╰─────────────────────────────────────╯
class Pd4Web {
  public:
    static void audioWorkletProcessorCreated(EMSCRIPTEN_WEBAUDIO_T audioContext, EM_BOOL success,
                                             void *userData);
    // static void initGuiInterface(void);

    // Main
    void init();
    void suspendAudio();
    void resumeAudio();
    void soundToggle();
    void openPatch(std::string PatchPath, std::string PatchCanvaId, std::string soundToggleId);

    static void post(const char *message);

    // Audio Worklets
    static EM_BOOL process(int numInputs, const AudioSampleFrame *In, int numOutputs,
                           AudioSampleFrame *Out, int numParams, const AudioParamFrame *params,
                           void *userData);
    static void audioWorkletInit(EMSCRIPTEN_WEBAUDIO_T audioContext, EM_BOOL success,
                                 void *userData);

    // Gui
    static void guiLoop();

    // Receivers
    static void receivedBang(const char *r);
    static void receivedFloat(const char *r, float f);
    static void receivedSymbol(const char *r, const char *s);
    static void receivedList(const char *r, int argc, t_atom *argv);
    static void receivedMessage(const char *recv, const char *symbol, int argc, t_atom *argv);

    // bind symbols
    void bindReceiver(std::string s);
    void addGuiReceiver(std::string s);
    void unbindReceiver();

    // midi
    void noteOn(int channel, int pitch, int velocity);

    // send Messages
    bool sendFloat(std::string r, float f);
    bool sendSymbol(std::string r, std::string s);
    bool sendBang(std::string r);
    void midiByte(uint8_t byte1, uint8_t byte2, uint8_t byte3);

    bool _startMessage(std::string r, int argc);
    void _addFloat(std::string r, float f);
    void _addSymbol(std::string r, std::string s);
    int _finishMessage(std::string s);

    // libpd HOOKs helpers
    int _getReceivedListSize(std::string r);
    std::string _getItemFromListType(std::string r, int i);
    std::string _getItemFromListSymbol(std::string r, int i);
    float _getItemFromListFloat(std::string r, int i);

    std::string _getMessageSelector(std::string r);

    EMSCRIPTEN_WEBAUDIO_T m_Context;
    t_pdinstance *m_NewPdInstance;

  private:
    // void bindGuiReceivers();

    bool m_Pd4WebInit = false;
    bool m_PdInit = false;
    bool m_audioSuspended = false;

    // Lib Pd
    void *m_AudioWorkletInstance;
    std::vector<std::string> m_Receivers;
};

// ──────────────────────────────────────────
struct Pd4WebUserData {
    Pd4Web *pd4web;
    t_pdinstance *libpd;

    bool soundInit;
    bool soundSuspended;
    std::string soundToggleSel;

    // mouse
    bool mousedown;
    bool doit;
    int xpos;
    int ypos;
    t_gobj *obj;
    t_canvas *canvas;
};

// ╭─────────────────────────────────────╮
// │  Bind C++ functions to JavaScript   │
// ╰─────────────────────────────────────╯
EMSCRIPTEN_BINDINGS(WebPd) {
    emscripten::class_<Pd4Web>("Pd4Web")
        .constructor<>() // Default constructor
        .function("init", &Pd4Web::init)
        .function("openPatch", &Pd4Web::openPatch)
        .function("suspendAudio", &Pd4Web::suspendAudio)
        .function("resumeAudio", &Pd4Web::resumeAudio)
        .function("soundToggle", &Pd4Web::soundToggle)

        // senders
        .function("sendFloat", &Pd4Web::sendFloat)
        .function("sendSymbol", &Pd4Web::sendSymbol)
        .function("sendBang", &Pd4Web::sendBang)

        // sendList is added by _Pd4WebJSFunctions();
        .function("_startMessage", &Pd4Web::_startMessage)
        .function("_addFloat", &Pd4Web::_addFloat)
        .function("_addSymbol", &Pd4Web::_addSymbol)
        .function("_finishMessage", &Pd4Web::_finishMessage)

        // Get List
        .function("_getReceivedListSize", &Pd4Web::_getReceivedListSize)
        .function("_getItemFromListType", &Pd4Web::_getItemFromListType)
        .function("_getItemFromListSymbol", &Pd4Web::_getItemFromListSymbol)
        .function("_getItemFromListFloat", &Pd4Web::_getItemFromListFloat)

        // Get selector
        .function("_getMessageSelector", &Pd4Web::_getMessageSelector)

        // Gui
        .function("_midibyte", &Pd4Web::midiByte);
}
